{"version":3,"sources":["/electron/main.ts"],"sourcesContent":["import path from 'node:path'\r\nimport { fileURLToPath } from 'node:url'\r\nimport { app, BrowserWindow } from 'electron'\r\n\r\nconst __dirname = path.dirname(fileURLToPath(import.meta.url))\r\n\r\nprocess.env['ELECTRON_DISABLE_SECURITY_WARNINGS'] = 'true'\r\n// The built directory structure\r\n//\r\n// ├─┬ dist\r\n// │ ├─┬ electron\r\n// │ │ ├── main.js\r\n// │ │ └── preload.js\r\n// │ ├── index.html\r\n// │ ├── ...other-static-files-from-public\r\n// │\r\nprocess.env.DIST = path.join(__dirname, '../dist')\r\nprocess.env.FARM_PUBLIC = app.isPackaged\r\n  ? process.env.DIST\r\n  : path.join(process.env.DIST, '../public')\r\n\r\nif (!app.requestSingleInstanceLock()) {\r\n  app.quit()\r\n  process.exit(0)\r\n}\r\n\r\nlet win: BrowserWindow | null\r\n\r\nfunction createWindow() {\r\n  win = new BrowserWindow({\r\n    icon: path.join(process.env.FARM_PUBLIC, 'logo.svg'),\r\n    webPreferences: {\r\n      preload: path.join(__dirname, './preload.mjs'),\r\n    },\r\n  })\r\n\r\n  // Test active push message to Renderer-process.\r\n  win.webContents.on('did-finish-load', () => {\r\n    win?.webContents.send('main-process-message', (new Date).toLocaleString())\r\n  })\r\n\r\n  if (process.env.FARM_DEV_SERVER_URL) {\r\n    win.loadURL(process.env.FARM_DEV_SERVER_URL)\r\n    win.webContents.openDevTools()\r\n  } else {\r\n    // win.loadFile('dist/index.html')\r\n    win.loadFile(path.join(process.env.DIST, 'index.html'))\r\n  }\r\n}\r\n\r\napp.on('window-all-closed', () => {\r\n  app.quit()\r\n  win = null\r\n})\r\n\r\napp.whenReady().then(createWindow)\r\n"],"names":[],"mappingsyB;AAER;AAUZ;AAGR;AAEM;AAC5B;AACK;AACf;AAEI;AAEK;AACiB;AACmB;AACzB;AACgB;AAChC;AACF;AAGsC;AACmC;AACzE;AAEqC;AACQ;AACf;AACvB;AAEoC;AAC3C;AACF;AAE4B;AAClB;AACF;AACR;AAEqB;AAAA;AAAA"}