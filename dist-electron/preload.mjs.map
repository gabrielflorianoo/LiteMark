{"version":3,"sources":["/electron/preload.ts"],"sourcesContent":["import { ipcRenderer, contextBridge } from 'electron';\n\n// --------- Expose some API to the Renderer process ---------\ncontextBridge.exposeInMainWorld('ipcRenderer', {\n    on(...args: Parameters<typeof ipcRenderer.on>) {\n        const [channel, listener] = args;\n        return ipcRenderer.on(channel, (event, ...args) =>\n            listener(event, ...args),\n        );\n    },\n    off(...args: Parameters<typeof ipcRenderer.off>) {\n        const [channel, ...omit] = args;\n        return ipcRenderer.off(channel, ...omit);\n    },\n    send(...args: Parameters<typeof ipcRenderer.send>) {\n        const [channel, ...omit] = args;\n        return ipcRenderer.send(channel, ...omit);\n    },\n    invoke(...args: Parameters<typeof ipcRenderer.invoke>) {\n        const [channel, ...omit] = args;\n        return ipcRenderer.invoke(channel, ...omit);\n    },\n\n    // You can expose other APTs you need here.\n    // ...\n});\n"],"names":[],"mappingsb;AAEL;AAE3B;AAC+C;AAChB;AACQ;AACvC;AACiD;AAClB;AACS;AACxC;AACqD;AACtB;AACW;AAC1C;AAIJ;AAAA;AAAA"}